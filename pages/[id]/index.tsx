import type {NextPage} from 'next'
import Head from 'next/head'
import styles from '../../styles/id.module.scss'
import {FC, useEffect, useRef, useState} from "react";
import {useRouter} from 'next/router';
import {LCgetUserStartStatus, LCInit, LCsetUserState, UserState,} from "../../components/dbUtils";
import {useRecoilState} from "recoil";
import {LCInitState, UserStatus} from "../../components/state";
import Screen from "../../components/Screen";
import Output from "../../components/Output";
import {element} from "prop-types";

LCInit()
const Home: NextPage = () => {
    const router = useRouter()
    const userRFID = useRef(router.query.id as string)
    const [userState, setUserState] = useRecoilState(UserStatus)

    useEffect(() => {
        if (router.query.id) {
            (async () => {
                console.log(router.query.id)
                const s =await LCgetUserStartStatus(router.query.id as string)
                setUserState(s)
                console.log(s)
                if (!userState.isStart) {
                    await LCsetUserState(s.lcID!, "isStart", true).catch(e=>e)
                }
            })()
        }
    }, [router])

    return (
        <div className={styles.container}
             style={{backgroundImage: `url(${require("../../public/bg.png").default.src})`}}>
            <Head>
                <title>Join New Act</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
                <meta name="viewport"
                      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0;"/>
            </Head>
            <main className={styles.main}>
                <PageSelector s={userState}/>
            </main>

        </div>
    )
}

interface pageSelectorProp {
    s: UserState
}

const PageSelector: FC<pageSelectorProp> = ({s}) => {
    if (s.lcID) {
        return <Screen/>
    } else if (s.isFinished) {
        return <Output/>
    } else {
        return <Output/>
    }

}

export default Home
